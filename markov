#!/usr/bin/perl
# Generate markov chains from an input corpus
use warnings;
use strict;
use Data::Dumper;

my %chain;
undef $/;
my $input = <STDIN>;
$input = lc $input;

#$input =~ s/[.,;:]//msg;

my @words = split /\s+/, $input;

for(my $i = 0 ; $i < @words ; $i++)
{
	push @{ $chain{$words[$i]} ||= [] }, $words[$i+1];
}

my @k = keys %chain;

#print Dumper(\%chain);


sub choose
{
	my $w = shift;
	my $next = $chain{$w}
		or return;
	return $next->[rand @$next];
}

sub chain
{
	my $w = shift;
	my @r = ();

	while(1)
	{
		push @r, $w;
		last if $w =~ m/[^.][.?]$/;
		$w = choose($w) or last;
	}

	return join ' ', @r;
}

if (@ARGV)
{
	print chain($_), "\n" for @ARGV;
} else {
	print chain($k[rand @k]), "\n";
}
